##############
# Laravel ENVs
##############

# CACHE_DRIVER=file
# QUEUE_CONNECTION=sync

###################
# Docker ENTRYPOINT
###################

CONTAINER_ROLE=queue

# # Laravel Artisan IFs
FORCE_CLEAR=true
FORCE_OPTIMIZE=true

# # PHP ENGINE
PHP_MEMORY_LIMIT=128M
PHP_MAX_EXECUTION_TIME=180

# The memory limit in megabytes!
QUEUE_MEMORY=64

# One approach to specifying the maximum number of times a job may be attempted is via the --tries switch on the Artisan command line.
# If a job exceeds its maximum number of attempts, it will be considered a "failed" job.
QUEUE_TRIES=3

# Using the --backoff option, you may specify how many seconds Laravel should wait before retrying a job that has encountered an exception.
# By default, a job is immediately released back onto the queue so that it may be attempted again:
QUEUE_BACKOFF=3

# When jobs are available on the queue, the worker will keep processing jobs with no delay in between them.
# However, the sleep option determines how many seconds the worker will "sleep" if there are no new jobs available.
# While sleeping, the worker will not process any new jobs - the jobs will be processed after the worker wakes up again.
QUEUE_SLEEP=5

# If a job is processing for longer than the number of seconds specified by the timeout value, the worker processing the job will exit with an error.
#
# NOTE: The --timeout value should always be at least several seconds shorter than your retry_after configuration value.
# This will ensure that a worker processing a frozen job is always terminated before the job is retried.
# If your --timeout option is longer than your retry_after configuration value, your jobs may be processed twice.
QUEUE_TIMEOUT=60
